@inherits LayoutComponentBase

<HeadContent>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link href="https://fonts.googleapis.com/css2?display=swap&amp;family=Inter%3Awght%40400%3B500%3B700%3B900" rel="stylesheet" />
    <title>Orbit CRM</title>
  </HeadContent>

<div class="font-display bg-background-light dark:bg-background-dark text-text-light dark:text-text-dark">
    <div class="flex min-h-screen">
        <!-- Sidebar -->
        <aside class="@($"{AsideWidthClass} bg-content-light/95 dark:bg-content-dark/95 backdrop-blur flex flex-col fixed h-full border-r border-border-light dark:border-border-dark transition-all duration-200")">
            <div class="@($"px-3 py-3 border-b border-border-light dark:border-border-dark flex items-center {HeaderJustifyClass}")">
                <div class="items-center gap-2 @(isCollapsed ? "hidden" : "flex")">
                    <div class="h-7 w-7 rounded-md bg-primary/10 text-primary grid place-items-center">O</div>
                    <h1 class="text-xl font-bold text-primary">Orbit CRM</h1>
                </div>
                <button class="p-2 rounded hover:bg-primary/10 dark:hover:bg-primary/20" @onclick="ToggleMenu" aria-label="MenÃ¼yÃ¼ aÃ§/kapat">
                    <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M8 12H16M8 7H16M8 17H16" stroke="currentColor" stroke-width="2" stroke-linecap="round" />
                    </svg>
                </button>
            </div>
            <nav class="flex-1 p-3 space-y-1">
                <NavLink href="/" title="Anasayfa" class="@NavItemClass" ActiveClass="@ActiveNavClass" Match="NavLinkMatch.All">
                    <span class="relative flex items-center gap-3">
                        <svg class="shrink-0" fill="currentColor" height="22" viewBox="0 0 256 256" width="22" xmlns="http://www.w3.org/2000/svg">
                            <path d="M224,115.55V208a16,16,0,0,1-16,16H168a16,16,0,0,1-16-16V168a8,8,0,0,0-8-8H112a8,8,0,0,0-8,8v40a16,16,0,0,1-16,16H48a16,16,0,0,1-16-16V115.55a16,16,0,0,1,5.17-11.78l80-75.48a16,16,0,0,1,21.66,0l80,75.48A16,16,0,0,1,224,115.55Z"></path>
                        </svg>
                        <span class="text-sm font-medium @(isCollapsed ? "hidden" : "inline")">Anasayfa</span>
                    </span>
                </NavLink>
                <NavLink href="/kullanici-yonetimi" title="KullanÄ±cÄ± YÃ¶netimi" class="@NavItemClass" ActiveClass="@ActiveNavClass">
                    <span class="relative flex items-center gap-3">
                        <svg class="shrink-0" fill="currentColor" height="22" viewBox="0 0 256 256" width="22" xmlns="http://www.w3.org/2000/svg">
                            <path d="M117.25,157.92a60,60,0,1,0-66.5,0A95.83,95.83,0,0,0,3.53,195.63a8,8,0,1,0,13.4,8.74,80,80,0,0,1,134.14,0,8,8,0,0,0,13.4-8.74A95.83,95.83,0,0,0,117.25,157.92ZM40,108a44,44,0,1,1,44,44A44.05,44.05,0,0,1,40,108Zm210.14,98.7a8,8,0,0,1-11.07-2.33A79.83,79.83,0,0,0,172,168a8,8,0,0,1,0-16,44,44,0,1,0-16.34-84.87,8,8,0,1,1-5.94-14.85,60,60,0,0,1,55.53,105.64,95.83,95.83,0,0,1,47.22,37.71A8,8,0,0,1,250.14,206.7Z"></path>
                        </svg>
                        <span class="text-sm font-medium @(isCollapsed ? "hidden" : "inline")">KullanÄ±cÄ± YÃ¶netimi</span>
                    </span>
                </NavLink>
            </nav>
            <div class="p-3 border-t border-border-light dark:border-border-dark">
                <button title="Tema DeÄŸiÅŸtir" aria-label="Tema DeÄŸiÅŸtir"
                        class="w-full flex items-center justify-center rounded-md p-2 border border-border-light dark:border-border-dark hover:bg-primary/10 dark:hover:bg-primary/20"
                        onclick="(function(){var d=document.documentElement;var isDark=d.classList.toggle('dark');localStorage.setItem('theme', isDark ? 'dark' : 'light');d.style.colorScheme=isDark?'dark':'light';})()">
                    <svg class="h-5 w-5 dark:hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="12" r="4"></circle>
                        <path d="M12 2v2M12 20v2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M2 12h2M20 12h2M4.93 19.07l1.41-1.41M17.66 6.34l1.41-1.41"></path>
                    </svg>
                    <svg class="h-5 w-5 hidden dark:inline" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z"></path>
                    </svg>
                    <span class="sr-only">Tema DeÄŸiÅŸtir</span>
                </button>
            </div>
        </aside>

        <!-- Main -->
        <main class="@($"{MainMarginClass} flex-1 p-6 transition-all duration-200")">
            <header class="mb-6 bg-content-light/80 dark:bg-content-dark/80 backdrop-blur border border-border-light dark:border-border-dark rounded-lg px-4 py-3 flex items-center gap-3">
                <div class="flex-1 text-sm text-subtext-light dark:text-subtext-dark">HoÅŸ geldiniz ðŸ‘‹</div>
                <div class="hidden md:flex items-center gap-2">
                    <input type="search" placeholder="Ara..." class="w-56 rounded-md border border-border-light dark:border-border-dark bg-background-light dark:bg-background-dark px-3 py-1.5 text-sm focus:outline-none focus:border-primary focus:ring-1 focus:ring-primary" />
                    <button class="rounded-md px-3 py-1.5 text-sm bg-primary text-white hover:bg-primary/90">Ara</button>
                </div>
                <AuthorizeView>
                    <Authorized>
                        <div class="relative">
                            <button class="flex items-center gap-2 rounded-md px-3 py-1.5 text-sm border border-border-light dark:border-border-dark hover:bg-primary/10 dark:hover:bg-primary/20" @onclick="ToggleAccount">
                                <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                                    <circle cx="12" cy="7" r="4"></circle>
                                </svg>
                                <span>@(DisplayName ?? "Hesap")</span>
                                <svg class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.25a.75.75 0 01-1.06 0L5.21 8.29a.75.75 0 01.02-1.08z" clip-rule="evenodd" /></svg>
                            </button>
                            <div class="absolute right-0 mt-2 w-44 rounded-md border border-border-light dark:border-border-dark bg-content-light dark:bg-content-dark shadow-lg z-10 @(isAccountOpen ? "block" : "hidden")">
                                <button class="w-full text-left px-4 py-2 text-sm hover:bg-primary/10 dark:hover:bg-primary/20" @onclick="GoToAccount">HesabÄ±m</button>
                                <button class="w-full text-left px-4 py-2 text-sm text-danger hover:bg-danger/10" @onclick="LogoutAsync">Ã‡Ä±kÄ±ÅŸ</button>
                            </div>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <NavLink href="/login" class="rounded-md px-3 py-1.5 text-sm border border-border-light dark:border-border-dark hover:bg-primary/10 dark:hover:bg-primary/20">GiriÅŸ</NavLink>
                    </NotAuthorized>
                </AuthorizeView>
            </header>
            @Body
        </main>
    </div>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">??</span>
  </div>

@inject IJSRuntime JS
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor Http
@inject NavigationManager Nav
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims
@code {
    bool isCollapsed = false;
    bool isAccountOpen = false;

    string? DisplayName => Http.HttpContext?.User?.Identity?.IsAuthenticated == true
        ? (Http.HttpContext!.User.FindFirst(ClaimTypes.Name)?.Value ?? "Hesap")
        : null;

    string AsideWidthClass => isCollapsed ? "w-16" : "w-64";
    string MainMarginClass => isCollapsed ? "ml-16" : "ml-64";
    string HeaderJustifyClass => isCollapsed ? "justify-center" : "justify-between";
    string ActiveNavClass => "bg-primary/10 text-primary dark:bg-primary/20 ring-1 ring-primary/20";
    string NavItemClass => $"group relative flex items-center {(isCollapsed ? "justify-center " : string.Empty)}gap-3 px-3.5 py-2 rounded-lg hover:bg-primary/10 hover:text-primary dark:hover:bg-primary/20 transition-colors";

    async Task PersistSidebarAsync()
    {
        try
        {
            await JS.InvokeVoidAsync("localStorage.setItem", "sidebar", isCollapsed ? "collapsed" : "expanded");
        }
        catch { }
    }

    async Task ToggleMenu()
    {
        isCollapsed = !isCollapsed;
        await PersistSidebarAsync();
    }

    void ToggleAccount() => isAccountOpen = !isAccountOpen;

    void GoToAccount()
    {
        isAccountOpen = false;
        Nav.NavigateTo("/hesabim");
    }

    async Task LogoutAsync()
    {
        isAccountOpen = false;
        // Perform full reload to a dedicated sign-out endpoint so cookies can be cleared before response starts
        Nav.NavigateTo("/logout", forceLoad: true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var saved = await JS.InvokeAsync<string>("localStorage.getItem", "sidebar");
                if (!string.IsNullOrEmpty(saved))
                {
                    isCollapsed = string.Equals(saved, "collapsed", StringComparison.OrdinalIgnoreCase);
                    StateHasChanged();
                }
            }
            catch { }
        }
    }
}
